services:
  frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ../frontend:/app
    command: npm run dev -- --host 0.0.0.0 --port 5173
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_PROXY=http://backend:5000
    networks:
      - app-network

  backend:
    image: python:3.12-slim
    working_dir: /app
    volumes:
      - ../backend:/app
    command: >-
      sh -c "pip install --no-cache-dir poetry && poetry install && poetry run flask run --host=0.0.0.0 --port=5000"
    environment:
      - FLASK_APP=${FLASK_APP:-app:app}
      - FLASK_ENV=development
    networks:
      - app-network

  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-example-root-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app_db}
      MYSQL_USER: ${MYSQL_USER:-app_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-example-password}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/conf.d:/etc/mysql/conf.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

# Alembic or other migration/seed containers can be added here as separate services sharing the app-network.

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge
