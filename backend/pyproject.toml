[project]
name = "backend"
version = "0.1.0"
description = ""
authors = [
    {name = "t.ishimine",email = "ishitoki47259@gmail.com"}
]
readme = "README.md"
requires-python = "^3.12"
dependencies = [
    "flask (>=2.3,<3.0)",
    "sqlalchemy (>=2.0,<3.0)",
    "pymysql (>=1.1,<2.0)",
    "python-dotenv (>=1.0,<2.0)",
    "cryptography (>=42.0,<47.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
dev = [
    "pytest (>=8.3,<9.0)",
    "pytest-cov (>=6.0,<7.0)",
    "pytest-xdist (>=3.6,<4.0)",
    "pytest-mock (>=3.14,<4.0)",
    "pytest-sugar (>=1.0,<2.0)",
    "mypy (>=1.13,<2.0)",
    "black (>=24.10,<25.0)",
    "isort (>=5.13,<6.0)",
    "flake8 (>=7.1,<8.0)",
    "pre-commit (>=3.8,<4.0)"
]

[tool.black]
line-length = 150
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 150
known_first_party = ["app"]

[tool.flake8]
max-line-length = 150
extend-ignore = ["E203", "W503"]
exclude = [".venv", ".mypy_cache", ".pytest_cache"]

[tool.mypy]
python_version = "3.12"
packages = ["app"]
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = false

[tool.poetry]
package-mode = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",                           # verbose output
    "--strict-markers",             # error on unknown markers
    "--strict-config",              # error on invalid config
    "--showlocals",                 # show local variables on failure
    "-W", "error",                  # treat warnings as errors
    "-W", "ignore::DeprecationWarning:distutils",
    "-W", "ignore::DeprecationWarning:importlib",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/__init__.py",
]
branch = true
parallel = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 80
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstractmethod",
    "@abc.abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
